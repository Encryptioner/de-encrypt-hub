
{
  "title": "De-encrypt Hub",
  "subtitle": "A versatile, browser-based toolkit for all your encryption, decryption, signing, and hashing needs.",
  "algorithms": [
    {
      "name": "AES",
      "value": "AES",
      "description": "Advanced Encryption Standard - A widely used symmetric encryption algorithm.",
      "principle": "AES operates on 128-bit blocks of data and uses a key that can be 128, 192, or 256 bits. It's an iterative cipher, meaning it applies the same set of transformations, called 'rounds', to the data block. The number of rounds depends on the key length (10, 12, or 14 rounds).",
      "visualizationSteps": [
        {
          "title": "1. State Array Preparation",
          "explanation": "The input text is converted into a 4x4 matrix of bytes, known as the 'state array'. This is the primary data structure that AES manipulates."
        },
        {
          "title": "2. Key Expansion",
          "explanation": "The secret key is expanded into a set of 'round keys'. A different round key is used for each round of encryption to ensure security."
        },
        {
          "title": "3. Initial Round - AddRoundKey",
          "explanation": "The initial state array is combined with the first round key using a bitwise XOR operation. This is the first step of scrambling the data."
        },
        {
          "title": "4. Main Rounds (9 for 128-bit keys)",
          "explanation": "The core of AES. This step is repeated multiple times. Each round consists of four transformations: SubBytes, ShiftRows, MixColumns, and AddRoundKey."
        },
        {
          "title": "4a. SubBytes Transformation",
          "explanation": "Each byte in the state array is substituted with another byte from a lookup table called the 'S-box'. This provides non-linearity to the encryption."
        },
        {
          "title": "4b. ShiftRows Transformation",
          "explanation": "The bytes in each row of the state array are cyclically shifted. This permutation step helps diffuse the data across the block."
        },
        {
          "title": "4c. MixColumns Transformation",
          "explanation": "Each column of the state array is transformed using a mathematical operation over a finite field. This provides further diffusion."
        },
        {
          "title": "4d. AddRoundKey Transformation",
          "explanation": "The state is XORed with the corresponding round key for the current round."
        },
        {
          "title": "5. Final Round",
          "explanation": "The final round is similar to a main round, but it omits the 'MixColumns' step."
        },
        {
          "title": "6. Final Ciphertext",
          "explanation": "After the final round, the state array holds the encrypted data, which is then presented as the final ciphertext."
        }
      ]
    },
    { "name": "DES", "value": "DES", "description": "Data Encryption Standard - An older symmetric-key algorithm." },
    { "name": "TripleDES", "value": "TripleDES", "description": "Triple Data Encryption Algorithm - Applies DES three times." },
    { "name": "Rabbit", "value": "Rabbit", "description": "A high-performance stream cipher." },
    { "name": "RC4", "value": "RC4", "description": "Rivest Cipher 4 - A widely used stream cipher." },
    { "name": "RC4Drop", "value": "RC4Drop", "description": "RC4 with a modified key-scheduling algorithm, dropping initial output." }
  ],
  "imageAlgorithms": [
    { "name": "Pixel Scramble", "value": "pixel-scramble", "description": "Shuffles the positions of pixels in the image based on the key. Creates a mosaic effect." },
    { "name": "Color Scramble", "value": "color-scramble", "description": "Swaps the Red, Green, and Blue channels of each pixel based on the key. Distorts colors." },
    { "name": "XOR Cipher", "value": "xor-cipher", "description": "Applies a bitwise XOR operation to each pixel's color values. Creates a noisy, static-like image." }
  ],
  "rsa": {
    "name": "RSA-OAEP",
    "description": "Asymmetric encryption standard using Optimal Asymmetric Encryption Padding.",
    "principle": "RSA encryption relies on the computational difficulty of factoring large prime numbers. A public key is used to encrypt data, and a private key is required to decrypt it. OAEP is a padding scheme used with RSA to add an element of randomness, which prevents several types of attacks and makes it more secure.",
    "encryptionSteps": [
      {
        "title": "1. Import Public Key",
        "explanation": "The provided public key (in JWK format) is imported and prepared for encryption. This key contains the modulus (n) and the public exponent (e)."
      },
      {
        "title": "2. Prepare Message (RSA-OAEP Padding)",
        "explanation": "The plaintext message is encoded and then padded using the Optimal Asymmetric Encryption Padding (OAEP) scheme. This adds randomness and structure to prevent attacks."
      },
      {
        "title": "3. Modular Exponentiation",
        "explanation": "The padded message is converted to a number and raised to the power of the public exponent (e), modulo the modulus (n). This is the core mathematical operation of RSA encryption."
      },
      {
        "title": "4. Final Ciphertext (Base64)",
        "explanation": "The resulting number from the exponentiation is converted into a byte array and then encoded into Base64 format for easy transport."
      }
    ],
    "decryptionSteps": [
      {
        "title": "1. Import Private Key",
        "explanation": "The provided private key (in JWK format) is imported. This key contains the necessary components, including the private exponent (d), to perform decryption."
      },
      {
        "title": "2. Decode Ciphertext",
        "explanation": "The Base64 encoded ciphertext is decoded back into a raw byte array, which represents the encrypted number."
      },
      {
        "title": "3. Modular Exponentiation",
        "explanation": "The encrypted number is raised to the power of the private exponent (d), modulo the modulus (n). This reverses the encryption process."
      },
      {
        "title": "4. Remove Padding & Decode",
        "explanation": "The OAEP padding is removed from the result, revealing the original encoded message. The message is then decoded back to its original text form."
      }
    ]
  }
}
